// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`todoSlice should create TodoList with empty todos 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="wrapper"
      >
        <div
          class="todo"
        >
          <button
            class="addBtn"
            data-testid="addTodoBtn"
          >
            Добавить в список
          </button>
          <div
            class="selectBlock"
          >
            <select>
              <option>
                Все
              </option>
              <option>
                Выполненные
              </option>
              <option>
                Невыполненные
              </option>
            </select>
          </div>
          <h3
            class="empty"
          >
            Список пуст...
          </h3>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="wrapper"
    >
      <div
        class="todo"
      >
        <button
          class="addBtn"
          data-testid="addTodoBtn"
        >
          Добавить в список
        </button>
        <div
          class="selectBlock"
        >
          <select>
            <option>
              Все
            </option>
            <option>
              Выполненные
            </option>
            <option>
              Невыполненные
            </option>
          </select>
        </div>
        <h3
          class="empty"
        >
          Список пуст...
        </h3>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`todoSlice should create TodoList with todo items 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="wrapper"
      >
        <div
          class="todo"
        >
          <button
            class="addBtn"
            data-testid="addTodoBtn"
          >
            Добавить в список
          </button>
          <div
            class="selectBlock"
          >
            <select>
              <option>
                Все
              </option>
              <option>
                Выполненные
              </option>
              <option>
                Невыполненные
              </option>
            </select>
          </div>
          <div
            class="item"
            data-testid="todoItem"
          >
            <div>
              <input
                data-testid="checkboxBtn"
                type="checkbox"
              />
              <h3>
                Сходить в магазин
              </h3>
            </div>
            <button
              data-testid="removeBtn"
            >
              Удалить
            </button>
          </div>
          <div
            class="item"
            data-testid="todoItem"
          >
            <div>
              <input
                data-testid="checkboxBtn"
                type="checkbox"
              />
              <h3>
                Помыть посуду
              </h3>
            </div>
            <button
              data-testid="removeBtn"
            >
              Удалить
            </button>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="wrapper"
    >
      <div
        class="todo"
      >
        <button
          class="addBtn"
          data-testid="addTodoBtn"
        >
          Добавить в список
        </button>
        <div
          class="selectBlock"
        >
          <select>
            <option>
              Все
            </option>
            <option>
              Выполненные
            </option>
            <option>
              Невыполненные
            </option>
          </select>
        </div>
        <div
          class="item"
          data-testid="todoItem"
        >
          <div>
            <input
              data-testid="checkboxBtn"
              type="checkbox"
            />
            <h3>
              Сходить в магазин
            </h3>
          </div>
          <button
            data-testid="removeBtn"
          >
            Удалить
          </button>
        </div>
        <div
          class="item"
          data-testid="todoItem"
        >
          <div>
            <input
              data-testid="checkboxBtn"
              type="checkbox"
            />
            <h3>
              Помыть посуду
            </h3>
          </div>
          <button
            data-testid="removeBtn"
          >
            Удалить
          </button>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Проверка компонента TodoList Проверка рендера компонента TodoList конкретным массивом данных 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="wrapper"
      >
        <div
          class="todo"
        >
          <button
            class="addBtn"
            data-testid="addTodoBtn"
          >
            Добавить в список
          </button>
          <div
            class="selectBlock"
          >
            <select>
              <option>
                Все
              </option>
              <option>
                Выполненные
              </option>
              <option>
                Невыполненные
              </option>
            </select>
          </div>
          <div
            class="item"
            data-testid="todoItem"
          >
            <div>
              <input
                data-testid="checkboxBtn"
                type="checkbox"
              />
              <h3>
                Сходить в магазин
              </h3>
            </div>
            <button
              data-testid="removeBtn"
            >
              Удалить
            </button>
          </div>
          <div
            class="item"
            data-testid="todoItem"
          >
            <div>
              <input
                data-testid="checkboxBtn"
                type="checkbox"
              />
              <h3>
                Помыть посуду
              </h3>
            </div>
            <button
              data-testid="removeBtn"
            >
              Удалить
            </button>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="wrapper"
    >
      <div
        class="todo"
      >
        <button
          class="addBtn"
          data-testid="addTodoBtn"
        >
          Добавить в список
        </button>
        <div
          class="selectBlock"
        >
          <select>
            <option>
              Все
            </option>
            <option>
              Выполненные
            </option>
            <option>
              Невыполненные
            </option>
          </select>
        </div>
        <div
          class="item"
          data-testid="todoItem"
        >
          <div>
            <input
              data-testid="checkboxBtn"
              type="checkbox"
            />
            <h3>
              Сходить в магазин
            </h3>
          </div>
          <button
            data-testid="removeBtn"
          >
            Удалить
          </button>
        </div>
        <div
          class="item"
          data-testid="todoItem"
        >
          <div>
            <input
              data-testid="checkboxBtn"
              type="checkbox"
            />
            <h3>
              Помыть посуду
            </h3>
          </div>
          <button
            data-testid="removeBtn"
          >
            Удалить
          </button>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Проверка компонента TodoList Проверка рендера компонента TodoList с пустым массивом данных 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="wrapper"
      >
        <div
          class="todo"
        >
          <button
            class="addBtn"
            data-testid="addTodoBtn"
          >
            Добавить в список
          </button>
          <div
            class="selectBlock"
          >
            <select>
              <option>
                Все
              </option>
              <option>
                Выполненные
              </option>
              <option>
                Невыполненные
              </option>
            </select>
          </div>
          <h3
            class="empty"
          >
            Список пуст...
          </h3>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="wrapper"
    >
      <div
        class="todo"
      >
        <button
          class="addBtn"
          data-testid="addTodoBtn"
        >
          Добавить в список
        </button>
        <div
          class="selectBlock"
        >
          <select>
            <option>
              Все
            </option>
            <option>
              Выполненные
            </option>
            <option>
              Невыполненные
            </option>
          </select>
        </div>
        <h3
          class="empty"
        >
          Список пуст...
        </h3>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
